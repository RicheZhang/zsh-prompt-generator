{"version":3,"sources":["redux/reducer.ts","redux/store.ts","components/Header.tsx","components/colors.ts","components/PromptItem.tsx","components/Prompt.tsx","container/Prompt.tsx","components/PromptItemList.tsx","container/PromptItemList.tsx","components/PromptPreview.tsx","container/PromptPreview.tsx","components/ZshrcPreview.tsx","container/ZshPreview.tsx","components/ColorPicker.tsx","components/PromptItemEdition.tsx","container/PromptItemEdition.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","prompt","rprompt","selectedPrompt","promptReducer","createSlice","reducers","initialize","selectPrompt","state","_ref","payload","Object","assign","selectPromptItem","_ref2","id","map","p","selected","addPromptItem","_ref3","push","objectSpread","uuid","fgColor","bgColor","bold","movePromptItem","_ref4","_state$state$selected","_ref4$payload","srcIdx","dstIdx","moved","splice","apply","concat","toConsumableArray","deletePromptItem","_ref5","filter","changeFgColor","_ref6","promptItem","find","changeBgColor","_ref7","toggleBold","reducer","actions","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","theme","createStyles","buttonIcon","marginRight","spacing","link","color","Header","classes","react_default","a","createElement","AppBar","position","Toolbar","className","Grid","container","direction","justify","Typography","variant","Link","component","Button","href","Code_default","getColor","xtermColors","height","minWidth","margin","border","borderRadius","display","alignItems","promptItemFont","fontSize","padding","promptItemIcon","cursor","PromptItem","props","displayStr","_props$selected","onClick","onDelete","react","style","backgroundColor","event","stopPropagation","undefined","Box","Cancel_default","fontStyle","PromptItemView","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","promptItems","onDragEnd","bind","assertThisInitialized","equals","setState","result","destination","list","startIndex","endIndex","Array","from","_result$splice","removed","slicedToArray","reorder","source","index","_this2","_this$props","_this$props$bgColor","onItemClick","react_beautiful_dnd_esm","droppableId","provided","snapshot","ref","innerRef","droppableProps","background","overflow","minHeight","borderColor","i","_ref$selected","key","draggableId","toString","draggableProps","dragHandleProps","placeholder","React","container_Prompt","type","useSelector","dispatch","useDispatch","Prompt","arguments","nested","paddingLeft","PromptItemList","List","items","promptStr","shStr","item","ListItem","ListItemText","primary","disablePadding","button","container_PromptItemList","promptPreview","justifyContent","innerPromptPreview","promptPreviewFont","lineHeight","letterSpacing","PromptPreview","_props$rpromptItems","rpromptItems","renderPromptItem","length","container_PromptPreview","zshrcPreview","ZshrcPreview","toPreview","part","ZshPreview","previewOuter","width","outlined","previewInner","colorPopper","colorBox","ColorPicker","value","onChange","_React$useState","_React$useState2","anchorEl","setAnchorEl","_React$useState3","_React$useState4","hover","setHover","renderColorBox","Boolean","clsx","currentTarget","onMouseEnter","onMouseLeave","aria-describedby","Popper","open","placement","Paper","Divider","_","PromptItemEdition","onBoldChange","onFgColorChange","onBgColorChange","FormGroup","FormControlLabel","label","control","Switch","checked","e","target","FormLabel","container_PromptItemEdition","App","es","store","xs","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1955f17b.chunk.js","sourcesContent":["import { Color, IPromptItem, PromptID } from '../types';\nimport { createSlice, PayloadAction } from 'redux-starter-kit';\nimport uuid from 'uuid/v4';\n\nexport interface State {\n  prompt: Required<IPromptItem>[];\n  rprompt: Required<IPromptItem>[];\n  selectedPrompt: 'prompt' | 'rprompt';\n}\n\nconst initialState: State = {\n  prompt: [],\n  rprompt: [],\n  selectedPrompt: 'prompt',\n};\n\nconst promptReducer = createSlice({\n  initialState,\n  reducers: {\n    initialize: () => initialState,\n    selectPrompt: (state: State, { payload }: PayloadAction<'prompt' | 'rprompt'>) => {\n      Object.assign(state, { selectedPrompt: payload });\n    },\n    selectPromptItem: (state: State, { payload }: PayloadAction<PromptID>) => {\n      const id = payload;\n      Object.assign(state, {\n        prompt: state.prompt.map(p => Object.assign(p, { selected: p.id === id })),\n      });\n      Object.assign(state, {\n        rprompt: state.rprompt.map(p => Object.assign(p, { selected: p.id === id })),\n      });\n    },\n    addPromptItem: (\n      state: State,\n      { payload }: PayloadAction<{ displayStr: string; shStr: string; promptStr: string }>\n    ) => {\n      state[state.selectedPrompt].push({\n        id: uuid(),\n        fgColor: null,\n        bgColor: null,\n        bold: false,\n        selected: false,\n        ...payload,\n      });\n    },\n    movePromptItem: (\n      state: State,\n      { payload: { srcIdx, dstIdx } }: PayloadAction<{ srcIdx: number; dstIdx: number }>\n    ) => {\n      const moved = state[state.selectedPrompt].splice(srcIdx, 1);\n      state[state.selectedPrompt].splice(dstIdx, 0, ...moved);\n    },\n    deletePromptItem: (state: State, { payload }: PayloadAction<PromptID>) => {\n      Object.assign(state, { prompt: state.prompt.filter(p => p.id !== payload) });\n      Object.assign(state, { rprompt: state.rprompt.filter(p => p.id !== payload) });\n    },\n    changeFgColor: (state: State, { payload }: PayloadAction<Color | number>) => {\n      const promptItem = [...state.prompt, ...state.rprompt].find(p => p.selected);\n      if (!!promptItem) {\n        Object.assign(promptItem, { fgColor: payload });\n      }\n    },\n    changeBgColor: (state: State, { payload }: PayloadAction<Color | number>) => {\n      const promptItem = [...state.prompt, ...state.rprompt].find(p => p.selected);\n      if (!!promptItem) {\n        Object.assign(promptItem, { bgColor: payload });\n      }\n    },\n    toggleBold: (state: State) => {\n      const promptItem = [...state.prompt, ...state.rprompt].find(p => p.selected);\n      if (!!promptItem) {\n        Object.assign(promptItem, { bold: !promptItem.bold });\n      }\n    },\n  },\n});\n\nexport const {\n  reducer,\n  actions: {\n    initialize,\n    selectPrompt,\n    selectPromptItem,\n    addPromptItem,\n    movePromptItem,\n    deletePromptItem,\n    changeFgColor,\n    changeBgColor,\n    toggleBold,\n  },\n} = promptReducer;\n","import { createStore } from 'redux';\nimport { reducer } from './reducer';\n\nexport default createStore(\n  reducer,\n  // @ts-ignore\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CodeICon from '@material-ui/icons/Code';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonIcon: {\n      marginRight: theme.spacing(1),\n    },\n    link: {\n      color: 'white',\n    },\n  })\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.link}>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Typography variant=\"h6\">Zsh Prompt Generator</Typography>\n          <Link\n            className={classes.link}\n            component={Button}\n            href=\"https://github.com/k-yokoishi/zsh-prompt-generator\"\n          >\n            <CodeICon className={classes.buttonIcon} />\n            Source on GitHub\n          </Link>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","export const getColor = (color: string | number) =>\n  typeof color === 'string' ? color : xtermColors[color];\n\n// Xterm 256 colors\n// https://jonasjacek.github.io/colors/\nexport const xtermColors = [\n  '#000000',\n  '#800000',\n  '#008000',\n  '#808000',\n  '#000080',\n  '#800080',\n  '#008080',\n  '#c0c0c0',\n  '#808080',\n  '#ff0000',\n  '#00ff00',\n  '#ffff00',\n  '#0000ff',\n  '#ff00ff',\n  '#00ffff',\n  '#ffffff',\n  '#000000',\n  '#00005f',\n  '#000087',\n  '#0000af',\n  '#0000d7',\n  '#0000ff',\n  '#005f00',\n  '#005f5f',\n  '#005f87',\n  '#005faf',\n  '#005fd7',\n  '#005fff',\n  '#008700',\n  '#00875f',\n  '#008787',\n  '#0087af',\n  '#0087d7',\n  '#0087ff',\n  '#00af00',\n  '#00af5f',\n  '#00af87',\n  '#00afaf',\n  '#00afd7',\n  '#00afff',\n  '#00d700',\n  '#00d75f',\n  '#00d787',\n  '#00d7af',\n  '#00d7d7',\n  '#00d7ff',\n  '#00ff00',\n  '#00ff5f',\n  '#00ff87',\n  '#00ffaf',\n  '#00ffd7',\n  '#00ffff',\n  '#5f0000',\n  '#5f005f',\n  '#5f0087',\n  '#5f00af',\n  '#5f00d7',\n  '#5f00ff',\n  '#5f5f00',\n  '#5f5f5f',\n  '#5f5f87',\n  '#5f5faf',\n  '#5f5fd7',\n  '#5f5fff',\n  '#5f8700',\n  '#5f875f',\n  '#5f8787',\n  '#5f87af',\n  '#5f87d7',\n  '#5f87ff',\n  '#5faf00',\n  '#5faf5f',\n  '#5faf87',\n  '#5fafaf',\n  '#5fafd7',\n  '#5fafff',\n  '#5fd700',\n  '#5fd75f',\n  '#5fd787',\n  '#5fd7af',\n  '#5fd7d7',\n  '#5fd7ff',\n  '#5fff00',\n  '#5fff5f',\n  '#5fff87',\n  '#5fffaf',\n  '#5fffd7',\n  '#5fffff',\n  '#870000',\n  '#87005f',\n  '#870087',\n  '#8700af',\n  '#8700d7',\n  '#8700ff',\n  '#875f00',\n  '#875f5f',\n  '#875f87',\n  '#875faf',\n  '#875fd7',\n  '#875fff',\n  '#878700',\n  '#87875f',\n  '#878787',\n  '#8787af',\n  '#8787d7',\n  '#8787ff',\n  '#87af00',\n  '#87af5f',\n  '#87af87',\n  '#87afaf',\n  '#87afd7',\n  '#87afff',\n  '#87d700',\n  '#87d75f',\n  '#87d787',\n  '#87d7af',\n  '#87d7d7',\n  '#87d7ff',\n  '#87ff00',\n  '#87ff5f',\n  '#87ff87',\n  '#87ffaf',\n  '#87ffd7',\n  '#87ffff',\n  '#af0000',\n  '#af005f',\n  '#af0087',\n  '#af00af',\n  '#af00d7',\n  '#af00ff',\n  '#af5f00',\n  '#af5f5f',\n  '#af5f87',\n  '#af5faf',\n  '#af5fd7',\n  '#af5fff',\n  '#af8700',\n  '#af875f',\n  '#af8787',\n  '#af87af',\n  '#af87d7',\n  '#af87ff',\n  '#afaf00',\n  '#afaf5f',\n  '#afaf87',\n  '#afafaf',\n  '#afafd7',\n  '#afafff',\n  '#afd700',\n  '#afd75f',\n  '#afd787',\n  '#afd7af',\n  '#afd7d7',\n  '#afd7ff',\n  '#afff00',\n  '#afff5f',\n  '#afff87',\n  '#afffaf',\n  '#afffd7',\n  '#afffff',\n  '#d70000',\n  '#d7005f',\n  '#d70087',\n  '#d700af',\n  '#d700d7',\n  '#d700ff',\n  '#d75f00',\n  '#d75f5f',\n  '#d75f87',\n  '#d75faf',\n  '#d75fd7',\n  '#d75fff',\n  '#d78700',\n  '#d7875f',\n  '#d78787',\n  '#d787af',\n  '#d787d7',\n  '#d787ff',\n  '#d7af00',\n  '#d7af5f',\n  '#d7af87',\n  '#d7afaf',\n  '#d7afd7',\n  '#d7afff',\n  '#d7d700',\n  '#d7d75f',\n  '#d7d787',\n  '#d7d7af',\n  '#d7d7d7',\n  '#d7d7ff',\n  '#d7ff00',\n  '#d7ff5f',\n  '#d7ff87',\n  '#d7ffaf',\n  '#d7ffd7',\n  '#d7ffff',\n  '#ff0000',\n  '#ff005f',\n  '#ff0087',\n  '#ff00af',\n  '#ff00d7',\n  '#ff00ff',\n  '#ff5f00',\n  '#ff5f5f',\n  '#ff5f87',\n  '#ff5faf',\n  '#ff5fd7',\n  '#ff5fff',\n  '#ff8700',\n  '#ff875f',\n  '#ff8787',\n  '#ff87af',\n  '#ff87d7',\n  '#ff87ff',\n  '#ffaf00',\n  '#ffaf5f',\n  '#ffaf87',\n  '#ffafaf',\n  '#ffafd7',\n  '#ffafff',\n  '#ffd700',\n  '#ffd75f',\n  '#ffd787',\n  '#ffd7af',\n  '#ffd7d7',\n  '#ffd7ff',\n  '#ffff00',\n  '#ffff5f',\n  '#ffff87',\n  '#ffffaf',\n  '#ffffd7',\n  '#ffffff',\n  '#080808',\n  '#121212',\n  '#1c1c1c',\n  '#262626',\n  '#303030',\n  '#3a3a3a',\n  '#444444',\n  '#4e4e4e',\n  '#585858',\n  '#606060',\n  '#666666',\n  '#767676',\n  '#808080',\n  '#8a8a8a',\n  '#949494',\n  '#9e9e9e',\n  '#a8a8a8',\n  '#b2b2b2',\n  '#bcbcbc',\n  '#c6c6c6',\n  '#d0d0d0',\n  '#dadada',\n  '#e4e4e4',\n  '#eeeeee',\n];\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport CancelICon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/styles';\nimport { PromptID, IPromptItem } from '../types';\nimport { getColor } from './colors';\n\ntype PromptItem = Omit<Omit<IPromptItem, 'shStr'>, 'promptStr'>;\n\ntype Props = PromptItem & {\n  onClick?: (id: PromptID) => void;\n  onDelete?: (id: PromptID) => void;\n};\n\nconst useStyles = makeStyles({\n  promptItem: {\n    height: '32px',\n    minWidth: '44px',\n    margin: '2px',\n    border: 'solid 2px',\n    borderRadius: 25,\n    display: 'inline-flex',\n    alignItems: 'center',\n  },\n  promptItemFont: {\n    fontSize: '13px',\n    padding: '1px 12px 0px',\n  },\n  promptItemIcon: {\n    margin: '0px 5px 0px -8px',\n    cursor: 'pointer',\n  },\n});\n\nexport default function PromptItem(props: Props) {\n  const { id, displayStr, fgColor, bgColor, selected = false, onClick, onDelete } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Typography\n      component=\"div\"\n      className={classes.promptItem}\n      style={{\n        color: fgColor === null ? 'white' : getColor(fgColor),\n        backgroundColor: bgColor === null ? '#3E3A39' : getColor(bgColor),\n        ...(selected ? { border: 'solid 2px cyan' } : {}),\n      }}\n      onClick={\n        onClick\n          ? event => {\n              event.stopPropagation();\n              onClick(id);\n            }\n          : undefined\n      }\n    >\n      <Box className={classes.promptItemFont}>{displayStr}</Box>\n      <CancelICon\n        className={classes.promptItemIcon}\n        fontStyle={fgColor === null ? 'white' : getColor(fgColor)}\n        onClick={\n          onDelete\n            ? event => {\n                event.stopPropagation();\n                onDelete(id);\n              }\n            : undefined\n        }\n      />\n    </Typography>\n  );\n}\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport { equals } from 'rambda';\nimport PromptItem from './PromptItem';\nimport { PromptID, Color, IPromptItem } from '../types';\n\ntype PromptItem = Omit<Omit<IPromptItem, 'shStr'>, 'promptStr'>;\n\ninterface Props {\n  promptItems: PromptItem[];\n  selected?: boolean;\n  bgColor?: Color;\n  onClick?: () => void;\n  onItemClick?: (id: PromptID) => void;\n  onDelete?: (id: PromptID) => void;\n  onDragEnd?: (result: DropResult) => void;\n}\n\ninterface State {\n  promptItems: PromptItem[];\n}\n\nfunction reorder<T>(list: Array<T>, startIndex: number, endIndex: number): Array<T> {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}\n\nclass PromptItemView extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      promptItems: props.promptItems,\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (!equals(this.state.promptItems, this.props.promptItems)) {\n      this.setState({ promptItems: this.props.promptItems });\n    }\n  }\n  onDragEnd(result: DropResult) {\n    // dropped outside of Droppable\n    if (!result.destination) return;\n\n    if (!!this.props.onDragEnd) {\n      this.props.onDragEnd(result);\n    }\n\n    const promptItems = reorder<PromptItem>(\n      this.state.promptItems,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      promptItems,\n    });\n  }\n\n  render() {\n    const { bgColor = '#3E3A39', selected, onClick, onItemClick, onDelete } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable direction=\"horizontal\" droppableId=\"prompt-part-view\">\n          {(provided, snapshot) => (\n            <Typography\n              component=\"div\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              style={{\n                background: bgColor,\n                overflow: 'auto',\n                display: 'flex',\n                padding: '8px',\n                minHeight: '48px',\n                alignItems: 'center',\n                borderRadius: '4px',\n                border: 'solid 4px',\n                borderColor: selected ? 'cyan' : bgColor,\n                cursor: 'pointer',\n              }}\n              onClick={onClick}\n            >\n              {this.state.promptItems.map(\n                ({ id, displayStr, fgColor, bgColor, selected = false }, i) => (\n                  <Draggable key={i} draggableId={i.toString()} index={i}>\n                    {(provided, snapshot) => (\n                      <Typography\n                        component=\"div\"\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <PromptItem\n                          id={id}\n                          displayStr={displayStr}\n                          fgColor={fgColor}\n                          bgColor={bgColor}\n                          selected={selected}\n                          onClick={onItemClick}\n                          onDelete={onDelete}\n                        />\n                      </Typography>\n                    )}\n                  </Draggable>\n                )\n              )}\n              {provided.placeholder}\n            </Typography>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nexport default PromptItemView;\n","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  State,\n  selectPrompt,\n  selectPromptItem,\n  movePromptItem,\n  deletePromptItem,\n} from '../redux/reducer';\nimport { PromptID } from '../types';\n\nimport Prompt from '../components/Prompt';\n\ntype Props = {\n  type: 'prompt' | 'rprompt';\n};\n\nexport default function({ type }: Props) {\n  const prompt = useSelector((state: State) => (type === 'prompt' ? state.prompt : state.rprompt));\n  const selectedPrompt = useSelector((state: State) => state.selectedPrompt);\n  const dispatch = useDispatch();\n\n  return (\n    <Prompt\n      promptItems={prompt}\n      selected={type === selectedPrompt}\n      onClick={() => dispatch(selectPrompt(type))}\n      onItemClick={(id: PromptID) => {\n        dispatch(selectPromptItem(id));\n      }}\n      onDelete={(...args) => dispatch(deletePromptItem(...args))}\n      onDragEnd={result =>\n        dispatch(movePromptItem({ srcIdx: result.source.index, dstIdx: result.destination!.index }))\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/styles';\n\ninterface Props {\n  onItemClick: (item: { displayStr: string; shStr: string; promptStr: string }) => void;\n}\n\ninterface PromptItem {\n  type: string;\n  items: Array<{\n    displayStr: string;\n    shStr: string;\n    promptStr: string;\n  }>;\n}\n\nconst useStyles = makeStyles({\n  nested: {\n    paddingLeft: '40px',\n  },\n});\n\nexport default function PromptItemList(props: Props) {\n  const { onItemClick } = props;\n  const classes = useStyles();\n\n  const promptItems: PromptItem[] = [\n    {\n      type: 'Login information',\n      items: [\n        { displayStr: 'User name', promptStr: 'user', shStr: '%n' },\n        { displayStr: 'Hostname', promptStr: 'host', shStr: '%m' },\n        { displayStr: 'Full hostname', promptStr: 'host.local', shStr: '%M' },\n      ],\n    },\n    {\n      type: 'Date and time',\n      items: [\n        { displayStr: 'yy-mm-dd', promptStr: '19-08-09', shStr: '%D' },\n        { displayStr: 'Current time(24-hour)', promptStr: '12:28', shStr: '%T' },\n        { displayStr: 'Current time(12-hour, am/pm)', promptStr: '12:28PM', shStr: '%@' },\n      ],\n    },\n  ];\n  return (\n    <List>\n      {promptItems.map(item => (\n        <React.Fragment key={item.type}>\n          <ListItem>\n            <ListItemText primary={item.type} />\n          </ListItem>\n          {item.items.map(({ displayStr, shStr, promptStr }) => (\n            <List disablePadding key={displayStr}>\n              <ListItem\n                button\n                className={classes.nested}\n                onClick={() => onItemClick({ displayStr, shStr, promptStr })}\n              >\n                <ListItemText primary={displayStr} />\n              </ListItem>\n            </List>\n          ))}\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PromptItemList from '../components/PromptItemList';\nimport { addPromptItem } from '../redux/reducer';\n\nexport default function() {\n  const dispatch = useDispatch();\n  return (\n    <PromptItemList\n      onItemClick={({ displayStr, shStr, promptStr }) =>\n        dispatch(addPromptItem({ displayStr, shStr, promptStr }))\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/styles';\nimport { IPromptItem } from '../types';\nimport { getColor } from '../components/colors';\n\ntype PromptItem = Omit<Omit<Omit<IPromptItem, 'shStr'>, 'id'>, 'displayStr'>;\n\ninterface Props {\n  promptItems: PromptItem[];\n  rpromptItems?: PromptItem[];\n}\n\nconst useStyles = makeStyles({\n  promptPreview: {\n    background: '#3E3A39',\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '8px',\n    borderRadius: '4px',\n  },\n  innerPromptPreview: {\n    background: '#3E3A39',\n    display: 'flex',\n    padding: '0px 4px',\n    height: '32px',\n    alignItems: 'center',\n  },\n  promptPreviewFont: {\n    lineHeight: '32px',\n    letterSpacing: 1,\n    padding: '0px 1px',\n  },\n});\n\nexport default function PromptPreview(props: Props) {\n  const { promptItems, rpromptItems = [] } = props;\n  const classes = useStyles();\n\n  const renderPromptItem = (promptItems: PromptItem[]) => (\n    <Typography component=\"div\" className={classes.innerPromptPreview}>\n      {promptItems.length > 0 &&\n        promptItems.map((p, i) => (\n          <Box\n            className={classes.promptPreviewFont}\n            style={{\n              color: p.fgColor === null ? 'white' : getColor(p.fgColor),\n              backgroundColor: p.bgColor === null ? '#3E3A39' : getColor(p.bgColor),\n            }}\n            key={i}\n          >\n            {p.promptStr}\n          </Box>\n        ))}\n    </Typography>\n  );\n\n  return (\n    <Typography component=\"div\" className={classes.promptPreview}>\n      {renderPromptItem(promptItems)}\n      {renderPromptItem(rpromptItems)}\n    </Typography>\n  );\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../redux/reducer';\n\nimport PromptPreview from '../components/PromptPreview';\n\nexport default function() {\n  const prompt = useSelector((state: State) => state.prompt);\n  const rprompt = useSelector((state: State) => state.rprompt);\n\n  return <PromptPreview promptItems={prompt} rpromptItems={rprompt} />;\n}\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { IPromptItem } from '../types';\n\ntype PromptItem = Omit<Omit<IPromptItem, 'id'>, 'promptStr'>;\n\ninterface Props {\n  promptItems: PromptItem[];\n  rpromptItems?: PromptItem[];\n}\n\nconst useStyles = makeStyles({\n  zshrcPreview: {\n    border: 'solid 1px',\n    borderRadius: '4px',\n    padding: '8px',\n    color: 'white',\n    backgroundColor: '#3E3A39',\n  },\n});\n\nexport default function ZshrcPreview(props: Props) {\n  const { promptItems, rpromptItems = [] } = props;\n  const classes = useStyles();\n\n  const toPreview = (part: PromptItem): string => {\n    let { shStr, fgColor, bgColor } = part;\n\n    if (fgColor) {\n      shStr = `%F{${fgColor}}${shStr}%f`;\n    }\n\n    if (bgColor) {\n      shStr = `%K{${bgColor}}${shStr}%k`;\n    }\n\n    if (part.bold) {\n      shStr = `%B${shStr}%b`;\n    }\n    return shStr;\n  };\n\n  return (\n    <Typography component=\"div\" className={classes.zshrcPreview}>\n      <code>PROMPT=\"{promptItems.map(p => toPreview(p))}\"</code>\n      <br />\n      {rpromptItems.length > 0 && <code>RPROMPT=\"{rpromptItems.map(p => toPreview(p))}\"</code>}\n    </Typography>\n  );\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../redux/reducer';\n\nimport ZshrcPreview from '../components/ZshrcPreview';\n\nexport default function() {\n  const prompt = useSelector((state: State) => state.prompt);\n  const rprompt = useSelector((state: State) => state.rprompt);\n\n  return <ZshrcPreview promptItems={prompt} rpromptItems={rprompt} />;\n}\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport { Color } from '../types';\nimport { getColor } from './colors';\n\ninterface Props {\n  value: Color | number | null;\n  onChange: (color: Color | number) => void;\n}\n\nconst useStyles = makeStyles({\n  previewOuter: {\n    padding: '2px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '116px',\n    cursor: 'pointer',\n    border: 'solid 1px',\n    borderRadius: '4px',\n    borderColor: 'transparent',\n  },\n  outlined: {\n    borderColor: 'lightgray',\n  },\n  previewInner: {\n    width: '24px',\n    height: '16px',\n    border: 'solid 1px',\n    borderColor: 'lightgray',\n    borderRadius: '4px',\n    margin: '4px',\n  },\n  colorPopper: {\n    padding: '8px',\n    width: '240px',\n  },\n  colorBox: {\n    width: '24px',\n    height: '24px',\n    borderRadius: '4px',\n    border: 'solid 1px',\n    borderColor: 'lightgray',\n    margin: '1px',\n    display: 'inline-block',\n    cursor: 'pointer',\n  },\n  color: {\n    margin: '4px',\n  },\n});\n\nexport default function ColorPicker(props: Props) {\n  const { value, onChange } = props;\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const [hover, setHover] = React.useState<boolean>(false);\n  const classes = useStyles();\n\n  function handleClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  }\n\n  const renderColorBox = (color: Color | number) => (\n    <Typography\n      key={color}\n      component=\"div\"\n      className={classes.colorBox}\n      style={{ backgroundColor: getColor(color) }}\n      onClick={() => onChange(color)}\n    />\n  );\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <Typography\n      component=\"div\"\n      className={clsx([classes.previewOuter, hover && classes.outlined])}\n      onClick={handleClick}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <Typography\n        component=\"div\"\n        aria-describedby={id}\n        className={classes.previewInner}\n        style={{ backgroundColor: value === null ? 'transparent' : getColor(value) }}\n      />\n      <Box className={classes.color}>{value}</Box>\n      <Popper id={id} anchorEl={anchorEl} open={Boolean(anchorEl)} placement={'left'}>\n        <Paper className={classes.colorPopper}>\n          <Typography>Basic 8 Colors</Typography>\n          {['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'].map(color =>\n            renderColorBox(color as Color)\n          )}\n          <Divider variant=\"middle\" />\n          <Typography>xterm 256 Colors</Typography>\n          {[...Array(256)].map((_, i) => renderColorBox(i))}\n        </Paper>\n      </Popper>\n    </Typography>\n  );\n}\n","import * as React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport ColorPicker from '../components/ColorPicker';\nimport { Color } from '../types';\n\ninterface Props {\n  displayStr: string;\n  bold: boolean;\n  fgColor: Color | number | null;\n  bgColor: Color | number | null;\n  onBoldChange: (bold: boolean) => void;\n  onFgColorChange: (color: Color | number) => void;\n  onBgColorChange: (color: Color | number) => void;\n}\n\nexport default function PromptItemEdition(props: Props) {\n  const {\n    displayStr,\n    bold,\n    fgColor,\n    bgColor,\n    onBoldChange,\n    onFgColorChange,\n    onBgColorChange,\n  } = props;\n  return (\n    <FormGroup>\n      <Typography>{displayStr}</Typography>\n      <FormControlLabel\n        label=\"Bold\"\n        control={\n          <Switch\n            color=\"primary\"\n            checked={bold}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => onBoldChange(e.target.checked)}\n          />\n        }\n      />\n      <FormLabel>Foreground color</FormLabel>\n      <ColorPicker value={fgColor} onChange={onFgColorChange} />\n      <FormLabel>Background color</FormLabel>\n      <ColorPicker value={bgColor} onChange={onBgColorChange} />\n    </FormGroup>\n  );\n}\n","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State, changeFgColor, changeBgColor, toggleBold } from '../redux/reducer';\nimport PromptItemEdition from '../components/PromptItemEdition';\n\nexport default function() {\n  const prompt = useSelector((state: State) => state.prompt);\n  const rprompt = useSelector((state: State) => state.rprompt);\n  const promptItem = [...prompt, ...rprompt].find(p => p.selected);\n  const dispatch = useDispatch();\n\n  if (!promptItem) return null;\n\n  const { displayStr, bold, fgColor, bgColor } = promptItem;\n  return (\n    <PromptItemEdition\n      displayStr={displayStr}\n      bold={bold}\n      fgColor={fgColor}\n      bgColor={bgColor}\n      onBoldChange={() => dispatch(toggleBold())}\n      onFgColorChange={color => dispatch(changeFgColor(color))}\n      onBgColorChange={color => dispatch(changeBgColor(color))}\n    />\n  );\n}\n","import React from 'react';\nimport 'typeface-roboto';\nimport { Provider } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport store from './redux/store';\nimport Header from './components/Header';\nimport Prompt from './container/Prompt';\nimport PromptItemList from './container/PromptItemList';\nimport PromptPreview from './container/PromptPreview';\nimport ZshPreview from './container/ZshPreview';\nimport PromptEdition from './container/PromptItemEdition';\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <Header />\n        <Grid container direction=\"row\" justify=\"space-between\" spacing={2}>\n          <Grid item xs={2}>\n            <PromptItemList />\n          </Grid>\n          <Grid item xs={8}>\n            <Typography variant=\"h5\">PROMPT</Typography>\n            <Prompt type=\"prompt\" />\n            <Typography variant=\"h5\">RPROMPT</Typography>\n            <Prompt type=\"rprompt\" />\n            <Typography variant=\"h5\">Preview</Typography>\n            <PromptPreview />\n            <Typography variant=\"h5\">Paste your .zshrc</Typography>\n            <ZshPreview />\n          </Grid>\n          <Grid item xs={2}>\n            <PromptEdition />\n          </Grid>\n        </Grid>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}